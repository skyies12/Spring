<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-page="/loginForm" 
							 authentication-failure-url="/loginForm?ng"/>
		<security:logout logout-success-url="/member/welcome" 
						 logout-url="/j_spring_security_logout"/>
		<security:intercept-url pattern="/" access="permitAll"/>
		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		<security:intercept-url pattern="/guest/**" access="permitAll"/>
		<security:intercept-url pattern="/member/**" access="hasRole('ROLE_USER, ROLE_ADMIN')"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
		<!--
			<security:user-service>
				<security:user name="user" password="123" authorities="ROLE_USER"/>
				<security:user name="admin" password="123" authorities="ROLE_ADMIN, ROLE_USER"/>
			</security:user-service>
		 -->
		 	<security:jdbc-user-service 
		 			data-source-ref="dataSource"
		 			users-by-username-query="select id as userName, pw as password, enabled from members where id = ?"
		 			authorities-by-username-query="select id as userName, authority from members where id = ?"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
